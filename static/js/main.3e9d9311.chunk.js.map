{"version":3,"sources":["Common/Button/Button.tsx","Common/InputText/InputText.tsx","Common/CheckBox/CheckBox.tsx","Common/NavLink/NavLink.tsx","TestPage/TestPage.tsx","Login/LoginPage.tsx","NewPassword/NewPasswordPage.tsx","PasswordRecovery/PasswordRecoveryPage.tsx","Profile/ProfilePage.tsx","Registration/RegistrationPage.tsx","App.tsx","reportWebVitals.ts","Login/LoginReducer.ts","NewPassword/NewPasswordReducer.ts","PasswordRecovery/PasswordRecoveryReducer.ts","Profile/ProfileReducer.ts","Registration/RegistrationReducer.ts","Redux/store.ts","index.tsx"],"names":["Button","props","className","href","title","id","in","stdDeviation","result","mode","values","in2","operator","InputText","type","placeholder","text","htmlFor","CheckBox","CommonNavLink","to","url","TestPage","LoginPage","NewPasswordPage","PasswordRecoveryPage","ProfilePage","RegistrationPage","App","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducers","combineReducers","loginReducer","state","action","newPasswordReducer","passwordRecoveryReducer","profileReducer","registrationReducer","store","createStore","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e9d9311.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\"\r\ntype PropsType={\r\n    title:string\r\n}\r\nexport const Button = (props:PropsType)=>{\r\n    return(\r\n        <div>\r\n            <div className=\"wrapper\">\r\n                <a className=\"button\" href=\"#\">{props.title}</a>\r\n            </div>\r\n                <defs>\r\n                    <filter id=\"goo\">\r\n                        <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"10\" result=\"blur\"/>\r\n                        <feColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 19 -9\"\r\n                                       result=\"goo\"/>\r\n                        <feComposite in=\"SourceGraphic\" in2=\"goo\" operator=\"atop\"/>\r\n                    </filter>\r\n                </defs>\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\ntype PropsType = {\r\n    text:string\r\n}\r\n\r\n\r\nexport const InputText = (props:PropsType) => {\r\n    return (\r\n        <div>\r\n            <div className=\"form__group\">\r\n                <input type=\"text\" className=\"form__input\" id=\"name\" placeholder={props.text}/>\r\n                <label htmlFor=\"name\" className=\"form__label\">{props.text}</label>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./style.css\"\r\ntype PropsType = {\r\n\r\n}\r\n\r\n\r\nexport const CheckBox = (props:PropsType) => {\r\n    return (\r\n        <div className={\"checkBoxContainer\"}>\r\n            <input type=\"checkbox\" id=\"_checkbox\"/>\r\n            <label htmlFor=\"_checkbox\">\r\n                <div id=\"tick_mark\"></div>\r\n            </label>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\ntype PropsType = {\r\n    url:string\r\n    title:string\r\n}\r\n\r\n\r\nexport const CommonNavLink = (props:PropsType) => {\r\n    return (\r\n        <div>\r\n            <NavLink className={\"link\"} to={props.url}>{props.title}</NavLink>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Button} from \"../Common/Button/Button\";\r\nimport {InputText} from \"../Common/InputText/InputText\";\r\nimport {CheckBox} from \"../Common/CheckBox/CheckBox\";\r\nimport {CommonNavLink} from \"../Common/NavLink/NavLink\";\r\n\r\n\r\nexport const TestPage = () => {\r\n    return (\r\n        <div>\r\n            <h1>Тестовая страница</h1>\r\n            <Button title={\"Hover me!\"}/>\r\n            <InputText text={\"Full name\"}/>\r\n            <CheckBox/>\r\n            <CommonNavLink title={\"test\"}url={\"/\"}/>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\n\r\n\r\n\r\nexport const LoginPage = ()=>{\r\n    return(\r\n        <div>Login</div>\r\n    )\r\n}","import React from \"react\";\r\n\r\n\r\n\r\n\r\nexport const NewPasswordPage = ()=>{\r\n    return(\r\n        <div>New Password</div>\r\n    )\r\n}","import React from \"react\";\r\n\r\n\r\n\r\n\r\nexport const PasswordRecoveryPage = ()=>{\r\n    return(\r\n        <div>\r\nPasswordRecovery\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\n\r\n\r\n\r\nexport const ProfilePage = ()=>{\r\n    return(\r\n        <div>\r\nProfile\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\n\r\n\r\n\r\nexport const RegistrationPage = ()=>{\r\n    return(\r\n        <div>\r\nRegistration\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {TestPage} from \"./TestPage/TestPage\";\nimport {Redirect, Route, Switch } from 'react-router-dom';\nimport { LoginPage } from './Login/LoginPage';\nimport {NewPasswordPage} from \"./NewPassword/NewPasswordPage\";\nimport {PasswordRecoveryPage} from \"./PasswordRecovery/PasswordRecoveryPage\";\nimport {ProfilePage} from \"./Profile/ProfilePage\";\nimport {RegistrationPage} from \"./Registration/RegistrationPage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path={\"/\"} render={() => <TestPage/>}/>\n        <Route path={\"/login\"} render={() => <LoginPage/>}/>\n        <Route path={\"/newPassword\"} render={() => <NewPasswordPage/>}/>\n        <Route path={\"/passwordRecovery\"} render={() => <PasswordRecoveryPage/>}/>\n        <Route path={\"/profile\"} render={() => <ProfilePage/>}/>\n        <Route path={\"/registration\"} render={() => <RegistrationPage/>}/>\n        <Route path={'/404'} render={() => <h1>404: PAGE NOT FOUND</h1>}/>\n        <Redirect path={'*'} to={\"404\"}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\ntype InitialStateType={\r\n\r\n}\r\nconst initialState={}\r\n\r\n\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action) {\r\n        case '':\r\n            return {...state,}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionsType = {\r\n\r\n}","\r\ntype InitialStateType={\r\n\r\n}\r\nconst initialState={}\r\n\r\n\r\n\r\nexport const newPasswordReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action) {\r\n        case '':\r\n            return {...state,}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionsType = {\r\n\r\n}","\r\ntype InitialStateType={\r\n\r\n}\r\nconst initialState={}\r\n\r\n\r\n\r\nexport const passwordRecoveryReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action) {\r\n        case '':\r\n            return {...state,}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionsType = {\r\n\r\n}","\r\ntype InitialStateType={\r\n\r\n}\r\nconst initialState={}\r\n\r\n\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action) {\r\n        case '':\r\n            return {...state,}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionsType = {\r\n\r\n}","\r\ntype InitialStateType={\r\n\r\n}\r\nconst initialState={}\r\n\r\n\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action) {\r\n        case '':\r\n            return {...state,}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionsType = {\r\n\r\n}","import {combineReducers, createStore} from \"redux\";\r\nimport {loginReducer} from \"../Login/LoginReducer\";\r\nimport {newPasswordReducer} from \"../NewPassword/NewPasswordReducer\";\r\nimport {passwordRecoveryReducer} from \"../PasswordRecovery/PasswordRecoveryReducer\";\r\nimport {profileReducer} from \"../Profile/ProfileReducer\";\r\nimport {registrationReducer} from \"../Registration/RegistrationReducer\";\r\n\r\n\r\nexport type StoreType = typeof store;\r\nexport type RootState = ReturnType<typeof reducers>;\r\nexport type AppDispatch = typeof store.dispatch\r\nlet reducers =combineReducers({\r\n    loginReducer,\r\n    newPasswordReducer,\r\n    passwordRecoveryReducer,\r\n    profileReducer,\r\n    registrationReducer\r\n})\r\n\r\n\r\nexport let store = createStore(reducers);\r\n// @ts-ignore\r\nwindow.store=store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./Redux/store\";\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <HashRouter>\n              <App />\n          </HashRouter>\n      </Provider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}